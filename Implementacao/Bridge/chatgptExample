// Abstraction
abstract class Character {
  protected weapon: Weapon;

  constructor(protected name: string, protected health: number, weapon: Weapon) {
    this.weapon = weapon;
  }

  attack(character: Character): void {
    const damage = this.weapon.damage();
    console.log(`${this.name} attacks ${character.getName()} with ${this.weapon.getName()} for ${damage} damage.`);
    character.receiveDamage(damage);
  }

  receiveDamage(damage: number): void {
    this.health -= damage;
    console.log(`${this.name} receives ${damage} damage. ${this.getName()}'s health is now ${this.health}.`);

    if (this.health <= 0) {
      this.die();
    }
  }

  getName(): string {
    return this.name;
  }

  abstract die(): void;
}

// Refined Abstraction
class Human extends Character {
  die(): void {
    console.log(`${this.getName()} has died.`);
  }
}

class Orc extends Character {
  die(): void {
    console.log(`${this.getName()} has died.`);
  }
}

// Implementor
interface Weapon {
  getName(): string;
  damage(): number;
}

// Concrete Implementor
class Sword implements Weapon {
  getName(): string {
    return 'Sword';
  }

  damage(): number {
    return 10;
  }
}

class Shield implements Weapon {
  getName(): string {
    return 'Shield';
  }

  damage(): number {
    return 5;
  }
}

class Axe implements Weapon {
  getName(): string {
    return 'Axe';
  }

  damage(): number {
    return 15;
  }
}

// Usage
const human = new Human('John', 100, new Sword());
const orc = new Orc('Grom', 100, new Axe());

human.attack(orc); // John attacks Grom with Sword for 10 damage. Grom receives 10 damage. Grom's health is now 90.
orc.attack(human); // Grom attacks John with Axe for 15 damage. John receives 15 damage. John's health is now 85.
human.attack(orc); // John attacks Grom with Sword for 10 damage. Grom receives 10 damage. Grom's health is now 80.
orc.attack(human); // Grom attacks John with Axe for 15 damage. John receives 15 damage. John's health is now 70.
human.attack(orc); // John attacks Grom with Sword for 10 damage. Grom receives 10 damage. Grom's health is now 70.
orc.attack(human); // Grom attacks John with Axe for 15 damage. John receives 15 damage. John's health is now 55.
human.attack(orc); // John attacks Grom with Sword for 10 damage. Grom receives 10 damage. Grom's health is now 60.
orc.attack(human); // Grom attacks John with Axe for 15 damage. John receives 15 damage. John's health is now 40.
human.attack(orc); // John attacks Grom with Sword for 10 damage. Grom receives 10 damage. Grom's health is now 50.
orc.attack(human); // Grom attacks John with Axe for 15 damage. John receives 15 damage. John's health is now 25.
human.attack(orc); // John attacks Grom with Sword for 10 damage. Grom receives 10 damage. Grom's health is now 40.
orc.attack(human); // Grom attacks John with Axe for 15 damage. John receives 15 damage. John's health
